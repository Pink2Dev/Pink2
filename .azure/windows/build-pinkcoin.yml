steps:
- bash: |
    cd src
    make -j2 -f makefile.linux-mingw DEPSDIR=$(windows.depsdir) TARGET_PLATFORM=x86_64
    strip pink2d.exe
  displayName: 'Build headless bin pink2d'

- bash: |
    $(windows.depsdir)/bin/qmake \
    USE_UPNP=1 CONFIG+=c++11 USE_QRCODE=1 STATIC=1 RELEASE=1 \
    DEPS_INCLUDE_PATH=$(windows.depsdir)/include \
    DEPS_LIB_PATH=$(windows.depsdir)/lib \
    QRENCODE_INCLUDE_PATH=$(windows.depsdir)/include \
    QRENCODE_LIB_PATH=$(windows.depsdir)/lib \
    BOOST_LIB_SUFFIX=-mt-s \
    BOOST_THREAD_LIB_SUFFIX=_win32-mt-s \
    BOOST_INCLUDE_PATH=$(windows.depsdir)/include/boost \
    BOOST_LIB_PATH=$(windows.depsdir)/lib \
    OPENSSL_INCLUDE_PATH=$(windows.depsdir)/include \
    OPENSSL_LIB_PATH=$(windows.depsdir)/lib \
    BDB_INCLUDE_PATH=$(windows.depsdir)/include \
    BDB_LIB_PATH=$(windows.depsdir)/lib \
    MINIUPNPC_INCLUDE_PATH=$(windows.depsdir)/include \
    MINIUPNPC_LIB_PATH=$(windows.depsdir)/lib \
    QMAKE_LRELEASE=$(windows.depsdir)/bin/lrelease \
    QMAKE_CFLAGS_ISYSTEM= \
    pinkcoin-qt.pro
    make -j2 -f Makefile.Release
    strip release/Pinkcoin-Qt.exe
  displayName: 'Build Pinkcoin-Qt'

- bash: |
    mkdir publish
    cp release/Pinkcoin-Qt.exe publish
    cp src/pink2d.exe publish
    cd publish
    zip $(windows.build.name).zip Pinkcoin-Qt.exe pink2d.exe
    cp $(windows.build.name).zip $(Build.ArtifactStagingDirectory)
  displayName: 'Tar Pinkcoin binaries'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Pinkcoin binaries'
  inputs:
    ArtifactName: 'Pinkcoin_binaries'
