---
version: 2
jobs:
  build:
    working_directory: /Pink2
    docker:
      - image: ubuntu:xenial
        environment:
          FROM_BUILD: "Pink2Dev"
          BDB_PREFIX: "/Pink2/src/db4"
          QRENCODE_PREFIX: "/Pink2/src/qrencode"
          OPENSSL_PREFIX: "/Pink2/src/openssl"
    steps:
      - checkout
      - run:
          name: Install Build Depends
          command: |
                  echo APT::Install-Recommends "0"; >> /etc/apt/apt.conf &&
                  echo APT::Install-Suggests "0"; >> /etc/apt/apt.conf &&
                  apt-get update && apt-get install \
                  --no-install-recommends \
                  -y \
                  qt5-default qt5-qmake qtbase5-dev-tools \
                  qttools5-dev-tools libqt5svg5-dev \
                  build-essential libboost-dev \
                  libboost-system-dev \
                  libboost-filesystem-dev \
                  libboost-program-options-dev \
                  libboost-thread-dev libssl-dev \
                  libdb++-dev \
                  libminiupnpc-dev \
                  wget \
                  ca-certificates
      - run:
          name: Build bdb4.8
          command: |
                 cd src
                 mkdir -p $BDB_PREFIX
                 wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'
                 echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef db-4.8.30.NC.tar.gz' | sha256sum -c
                 tar -xzvf db-4.8.30.NC.tar.gz
                 cd db-4.8.30.NC/build_unix/
                 ../dist/configure --enable-cxx \
                 --disable-shared --with-pic --prefix=$BDB_PREFIX
                 make install
      - run:
          name: Build qrencode
          command: |
                 cd src
                 mkdir -p $QRENCODE_PREFIX
                 wget 'https://fukuchi.org/works/qrencode/qrencode-3.4.4.tar.gz'
                 echo 'e794e26a96019013c0e3665cb06b18992668f352c5553d0a553f5d144f7f2a72 qrencode-3.4.4.tar.gz' | sha256sum -c
                 tar -xzvf qrencode-3.4.4.tar.gz
                 cd qrencode-3.4.4
                 ./configure --disable-shared --enable-static --without-tools --prefix=$QRENCODE_PREFIX
                 make install
      - run:
          name: Build openssl
          command: |
                 cd src
                 mkdir -p $OPENSSL_PREFIX
                 wget 'https://www.openssl.org/source/openssl-1.0.2l.tar.gz'
                 echo 'ce07195b659e75f4e1db43552860070061f156a98bb37b672b101ba6e3ddf30c openssl-1.0.2l.tar.gz' | sha256sum -c
                 tar -xzvf openssl-1.0.2l.tar.gz
                 cd openssl-1.0.2l
                 ./Configure  linux-x86_64 no-ssl2 no-ssl3 no-comp --prefix=$OPENSSL_PREFIX no-shared
                 make depend
                 make install
      - run:
          name: Build pinkcoin-qt
          command: |
                  qmake \
                  USE_UPNP=1 \
                  USE_DBUS=1 \
                  CONFIG+=c++11 \
                  USE_QRCODE=1 \
                  RELEASE=1 \
                  BDB_LIB_PATH=$BDB_PREFIX/lib \
                  BDB_INCLUDE_PATH=$BDB_PREFIX/include \
                  OPENSSL_INCLUDE_PATH=$OPENSSL_PREFIX/include \
                  OPENSSL_LIB_PATH=$OPENSSL_PREFIX/lib \
                  QRENCODE_LIB_PATH=$QRENCODE_PREFIX/lib \
                  QRENCODE_INCLUDE_PATH=$QRENCODE_PREFIX/include
                  make -j 2
                  strip Pinkcoin-Qt
      - run:
          name: Build headless bin pink2d
          command: |
                  cd src
                  make -j 2 -f makefile.unix STATIC=1 USE_UPNP=1 USE_QRCODE=1 BDB_INCLUDE_PATH=$BDB_PREFIX/include BDB_LIB_PATH=$BDB_PREFIX/lib OPENSSL_LIB_PATH=$OPENSSL_PREFIX/lib OPENSSL_INCLUDE_PATH=$OPENSSL_PREFIX/include
                  strip pink2d
      - run:
          name: Set Artifact name as env
          command: |
                  echo 'export BUILD_DATE=$(date "+%Y%m%d%H%M")' >> $BASH_ENV
                  echo 'export BUILD_NAME=Pinkcoin-CIbuild-$CIRCLE_BUILD_NUM-$BUILD_DATE' >> $BASH_ENV
      - run:
          name: Tar artifacts
          command: |
                  mkdir /tmp/build/
                  cp src/pink2d /tmp/build
                  cp Pinkcoin-Qt /tmp/build
                  tar cvfz /tmp/build/$BUILD_NAME.tar.gz .
      - store_artifacts:
          path: /tmp/build/
destination: linux
